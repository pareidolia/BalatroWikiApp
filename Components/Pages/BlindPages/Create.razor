@page "/blinds/create"
@using Microsoft.EntityFrameworkCore
@using BalatroWikiApp.Models
@inject IDbContextFactory<BalatroWikiApp.Models.BalatroDBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Blind</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Blind" OnValidSubmit="AddBlind" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="nameblind" class="form-label">NameBlind:</label> 
                <InputText id="nameblind" @bind-Value="Blind.NameBlind" class="form-control" /> 
                <ValidationMessage For="() => Blind.NameBlind" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="anteblind" class="form-label">AnteBlind:</label> 
                <AntDesign.InputNumber id="anteblind" @bind-Value="Blind.AnteBlind" class="form-control" /> 
                <ValidationMessage For="() => Blind.AnteBlind" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="descriptionblind" class="form-label">DescriptionBlind:</label> 
                <InputText id="descriptionblind" @bind-Value="Blind.DescriptionBlind" class="form-control" /> 
                <ValidationMessage For="() => Blind.DescriptionBlind" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="effectblind" class="form-label">EffectBlind:</label> 
                <InputText id="effectblind" @bind-Value="Blind.EffectBlind" class="form-control" /> 
                <ValidationMessage For="() => Blind.EffectBlind" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="rewardblind" class="form-label">RewardBlind:</label> 
                <InputNumber id="rewardblind" @bind-Value="Blind.RewardBlind" class="form-control" /> 
                <ValidationMessage For="() => Blind.RewardBlind" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/blinds">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Blind Blind { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddBlind()
    {
        using var context = DbFactory.CreateDbContext();
        context.Blinds.Add(Blind);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/blinds");
    }
}
