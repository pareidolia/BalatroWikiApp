@page "/seals/create"
@using Microsoft.EntityFrameworkCore
@using BalatroWikiApp.Models
@inject IDbContextFactory<BalatroWikiApp.Models.BalatroDBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Seal</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Seal" OnValidSubmit="AddSeal" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="nameseal" class="form-label">NameSeal:</label> 
                <InputText id="nameseal" @bind-Value="Seal.NameSeal" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Seal.NameSeal" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="effectseal" class="form-label">EffectSeal:</label> 
                <InputText id="effectseal" @bind-Value="Seal.EffectSeal" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Seal.EffectSeal" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="typeseal" class="form-label">TypeSeal:</label> 
                <InputText id="typeseal" @bind-Value="Seal.TypeSeal" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Seal.TypeSeal" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/seals">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Seal Seal { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddSeal()
    {
        using var context = DbFactory.CreateDbContext();
        context.Seals.Add(Seal);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/seals");
    }
}
