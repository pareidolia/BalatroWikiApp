@page "/seals/details"
@using Microsoft.EntityFrameworkCore
@using BalatroWikiApp.Models
@inject IDbContextFactory<BalatroWikiApp.Models.BalatroDBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Seal</h2>
    <hr />
    @if (seal is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">NameSeal</dt>
            <dd class="col-sm-10">@seal.NameSeal</dd>
            <dt class="col-sm-2">EffectSeal</dt>
            <dd class="col-sm-10">@seal.EffectSeal</dd>
            <dt class="col-sm-2">TypeSeal</dt>
            <dd class="col-sm-10">@seal.TypeSeal</dd>
        </dl>
        <div>
            <a href="@($"/seals/edit?idseal={seal.IdSeal}")">Edit</a> |
            <a href="@($"/seals")">Back to List</a>
        </div>
    }
</div>

@code {
    private Seal? seal;

    [SupplyParameterFromQuery]
    private int IdSeal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        seal = await context.Seals.FirstOrDefaultAsync(m => m.IdSeal == IdSeal);

        if (seal is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
