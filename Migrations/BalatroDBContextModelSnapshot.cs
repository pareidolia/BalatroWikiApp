// <auto-generated />
using System;
using BalatroWikiApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BalatroWikiApp.Migrations
{
    [DbContext(typeof(BalatroDBContext))]
    partial class BalatroDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BalatroWikiApp.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Blind", b =>
                {
                    b.Property<int>("IdBlind")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idBlind");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdBlind"));

                    b.Property<int>("AnteBlind")
                        .HasColumnType("int")
                        .HasColumnName("anteBlind");

                    b.Property<string>("DescriptionBlind")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descriptionBlind");

                    b.Property<string>("EffectBlind")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("effectBlind");

                    b.Property<string>("NameBlind")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameBlind");

                    b.Property<int>("RewardBlind")
                        .HasColumnType("int")
                        .HasColumnName("rewardBlind");

                    b.HasKey("IdBlind")
                        .HasName("PRIMARY");

                    b.ToTable("blinds");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Boosterpack", b =>
                {
                    b.Property<int>("IdJoker")
                        .HasColumnType("int")
                        .HasColumnName("idJoker");

                    b.Property<int>("IdTarot")
                        .HasColumnType("int")
                        .HasColumnName("idTarot");

                    b.Property<int>("IdSpectral")
                        .HasColumnType("int")
                        .HasColumnName("idSpectral");

                    b.Property<int>("NumCard")
                        .HasColumnType("int")
                        .HasColumnName("numCard");

                    b.Property<string>("DescriptionPack")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descriptionPack");

                    b.Property<string>("NamePack")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("namePack");

                    b.Property<int>("NumberChoices")
                        .HasColumnType("int")
                        .HasColumnName("numberChoices");

                    b.Property<int>("NumberPack")
                        .HasColumnType("int")
                        .HasColumnName("numberPack");

                    b.Property<int>("NumberProposition")
                        .HasColumnType("int")
                        .HasColumnName("numberProposition");

                    b.Property<int>("PricePack")
                        .HasColumnType("int")
                        .HasColumnName("pricePack");

                    b.HasKey("IdJoker", "IdTarot", "IdSpectral", "NumCard")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0, 0 });

                    b.HasIndex(new[] { "NumCard" }, "fk_card");

                    b.HasIndex(new[] { "IdSpectral" }, "fk_spectral");

                    b.HasIndex(new[] { "IdTarot" }, "fk_tarot");

                    b.ToTable("boosterpack");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Card", b =>
                {
                    b.Property<int>("NumCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("numCard");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NumCard"));

                    b.Property<string>("FamilyCard")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("familyCard");

                    b.Property<bool>("IsEnhanced")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isEnhanced");

                    b.Property<string>("NameCard")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameCard");

                    b.HasKey("NumCard")
                        .HasName("PRIMARY");

                    b.ToTable("cards");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Deck", b =>
                {
                    b.Property<int>("IdDeck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDeck");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDeck"));

                    b.Property<string>("DescriptionDeck")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descriptionDeck");

                    b.Property<string>("NameDeck")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameDeck");

                    b.HasKey("IdDeck")
                        .HasName("PRIMARY");

                    b.ToTable("decks");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Edition", b =>
                {
                    b.Property<int>("IdEdition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEdition");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEdition"));

                    b.Property<string>("EffectEdition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("effectEdition");

                    b.Property<string>("NameEdition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameEdition");

                    b.HasKey("IdEdition")
                        .HasName("PRIMARY");

                    b.ToTable("editions");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Enhancedcard", b =>
                {
                    b.Property<int>("IdEnhanced")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEnhanced");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEnhanced"));

                    b.Property<string>("EffectEnhanced")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("effectEnhanced");

                    b.Property<string>("NameEnhanced")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameEnhanced");

                    b.Property<string>("TypeEnhanced")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("typeEnhanced");

                    b.HasKey("IdEnhanced")
                        .HasName("PRIMARY");

                    b.ToTable("enhancedcards");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Joker", b =>
                {
                    b.Property<int>("IdJoker")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idJoker");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdJoker"));

                    b.Property<string>("DescriptionJoker")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descriptionJoker");

                    b.Property<bool>("HasFaceJoker")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("hasFaceJoker");

                    b.Property<string>("NameJoker")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nameJoker");

                    b.Property<int>("PriceJoker")
                        .HasColumnType("int")
                        .HasColumnName("priceJoker");

                    b.Property<string>("RarityJoker")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("rarityJoker");

                    b.Property<decimal?>("SizeJoker")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)")
                        .HasColumnName("sizeJoker");

                    b.Property<string>("TypeJoker")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("typeJoker");

                    b.HasKey("IdJoker")
                        .HasName("PRIMARY");

                    b.ToTable("jokers");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Planetcard", b =>
                {
                    b.Property<int>("IdPlanet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPlanet");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPlanet"));

                    b.Property<string>("HandPlanet")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("handPlanet");

                    b.Property<string>("NamePlanet")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("namePlanet");

                    b.HasKey("IdPlanet")
                        .HasName("PRIMARY");

                    b.ToTable("planetcard");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Seal", b =>
                {
                    b.Property<int>("IdSeal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSeal");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdSeal"));

                    b.Property<string>("EffectSeal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("effectSeal");

                    b.Property<string>("NameSeal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nameSeal");

                    b.Property<string>("TypeSeal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("typeSeal");

                    b.HasKey("IdSeal")
                        .HasName("PRIMARY");

                    b.ToTable("seals");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Spectralcard", b =>
                {
                    b.Property<int>("IdSpectral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSpectral");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdSpectral"));

                    b.Property<string>("EffectSpectral")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("effectSpectral");

                    b.Property<string>("NameSpectral")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameSpectral");

                    b.HasKey("IdSpectral")
                        .HasName("PRIMARY");

                    b.ToTable("spectralcard");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Sticker", b =>
                {
                    b.Property<int>("IdSticker")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSticker");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdSticker"));

                    b.Property<string>("DescriptionSticker")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descriptionSticker");

                    b.Property<string>("EffectSticker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("effectSticker");

                    b.Property<string>("NameSticker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameSticker");

                    b.HasKey("IdSticker")
                        .HasName("PRIMARY");

                    b.ToTable("sticker");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Tag", b =>
                {
                    b.Property<int>("IdTag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTag");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTag"));

                    b.Property<string>("EffectTag")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("effectTag");

                    b.Property<string>("NameTag")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameTag");

                    b.HasKey("IdTag")
                        .HasName("PRIMARY");

                    b.ToTable("tags");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Tarotcard", b =>
                {
                    b.Property<int>("IdTarot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTarot");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTarot"));

                    b.Property<string>("EffectTarot")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("effectTarot");

                    b.Property<string>("NameTarot")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameTarot");

                    b.HasKey("IdTarot")
                        .HasName("PRIMARY");

                    b.ToTable("tarotcard");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Voucher", b =>
                {
                    b.Property<int>("IdVoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVoucher");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdVoucher"));

                    b.Property<string>("DescriptionVoucher")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descriptionVoucher");

                    b.Property<string>("NameVoucher")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nameVoucher");

                    b.Property<int>("PriceVoucher")
                        .HasColumnType("int")
                        .HasColumnName("priceVoucher");

                    b.Property<bool>("StateVoucher")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("stateVoucher");

                    b.HasKey("IdVoucher")
                        .HasName("PRIMARY");

                    b.ToTable("vouchers");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Boosterpack", b =>
                {
                    b.HasOne("BalatroWikiApp.Models.Joker", "IdJokerNavigation")
                        .WithMany("Boosterpacks")
                        .HasForeignKey("IdJoker")
                        .IsRequired()
                        .HasConstraintName("fk_joker");

                    b.HasOne("BalatroWikiApp.Models.Spectralcard", "IdSpectralNavigation")
                        .WithMany("Boosterpacks")
                        .HasForeignKey("IdSpectral")
                        .IsRequired()
                        .HasConstraintName("fk_spectral");

                    b.HasOne("BalatroWikiApp.Models.Tarotcard", "IdTarotNavigation")
                        .WithMany("Boosterpacks")
                        .HasForeignKey("IdTarot")
                        .IsRequired()
                        .HasConstraintName("fk_tarot");

                    b.HasOne("BalatroWikiApp.Models.Card", "NumCardNavigation")
                        .WithMany("Boosterpacks")
                        .HasForeignKey("NumCard")
                        .IsRequired()
                        .HasConstraintName("fk_card");

                    b.Navigation("IdJokerNavigation");

                    b.Navigation("IdSpectralNavigation");

                    b.Navigation("IdTarotNavigation");

                    b.Navigation("NumCardNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BalatroWikiApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BalatroWikiApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BalatroWikiApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BalatroWikiApp.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Card", b =>
                {
                    b.Navigation("Boosterpacks");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Joker", b =>
                {
                    b.Navigation("Boosterpacks");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Spectralcard", b =>
                {
                    b.Navigation("Boosterpacks");
                });

            modelBuilder.Entity("BalatroWikiApp.Models.Tarotcard", b =>
                {
                    b.Navigation("Boosterpacks");
                });
#pragma warning restore 612, 618
        }
    }
}
